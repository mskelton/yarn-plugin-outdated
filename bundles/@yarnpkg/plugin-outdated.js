/* eslint-disable */
module.exports = {
name: "@yarnpkg/plugin-outdated",
factory: function (require) {
var plugin;plugin=(()=>{"use strict";var e={399:(e,t,r)=>{r.r(t),r.d(t,{default:()=>y});const o=require("@yarnpkg/cli"),s=require("@yarnpkg/core"),n=require("clipanion"),a=require("os"),i=require("semver"),c=require("@yarnpkg/plugin-essentials"),d=Boolean,p=e=>i.valid(i.coerce(e));class l{constructor(e,t,r){this.project=e,this.workspace=t,this.cache=r}async fetch(e,t){const r=await c.suggestUtils.fetchDescriptorFrom(e,t,{cache:this.cache,preserveModifier:e.range,project:this.project,workspace:this.workspace});return p(null===r?e.range:r.range)}}const u=/^([0-9]+\.)([0-9]+\.)(.+)$/,h=["name","current","latest","workspace","type"];class m{constructor(e,t,r,o){this.context=e,this.configuration=t,this.dependencies=r,this.extraColumns=o,this.sizes=null,this.headers={current:"Current",latest:"Latest",name:"Package",type:"Package Type",workspace:"Workspace"}}print(){this.sizes=this.getColumnSizes(),this.printHeader(),this.dependencies.forEach(e=>{var t;const r=this.getDiffColor(e);this.printRow({current:e.current.padEnd(this.sizes.current),latest:this.formatVersion(e,"latest",r),name:this.applyColor(e.name.padEnd(this.sizes.name),r),type:e.type.padEnd(this.sizes.type),workspace:null===(t=e.workspace)||void 0===t?void 0:t.padEnd(this.sizes.workspace)})})}applyColor(e,t){return s.formatUtils.pretty(this.configuration,e,t)}formatVersion(e,t,r){const o=e[t].padEnd(this.sizes[t]),n=o.match(u);if(!n)return o;const a=["red","yellow","green"].indexOf(r)+1,i=n.slice(1,a).join(""),c=n.slice(a).join("");return i+s.formatUtils.pretty(this.configuration,this.applyColor(c,r),"bold")}getDiffColor(e){const t=i.coerce(e.current),r=i.coerce(e.latest);return r.major>t.major?"red":r.minor>t.minor?"yellow":"green"}getColumnSizes(){const e={current:this.headers.current.length,latest:this.headers.latest.length,name:this.headers.name.length,type:this.headers.type.length,workspace:this.headers.workspace.length};for(const t of this.dependencies)for(const[r,o]of Object.entries(t)){const t=e[r],s=(o||"").length;e[r]=t>s?t:s}return e}formatColumnHeader(e){return s.formatUtils.pretty(this.configuration,this.headers[e].padEnd(this.sizes[e]),"bold")}printHeader(){this.printRow({current:this.formatColumnHeader("current"),latest:this.formatColumnHeader("latest"),name:this.formatColumnHeader("name"),type:this.formatColumnHeader("type"),workspace:this.formatColumnHeader("workspace")})}printRow(e){const t=h.filter(e=>{var t;return null===(t=this.extraColumns[e])||void 0===t||t}).map(t=>e[t]).join("   ");this.context.stdout.write(t+a.EOL)}}var f=function(e,t,r,o){var s,n=arguments.length,a=n<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,r,o);else for(var i=e.length-1;i>=0;i--)(s=e[i])&&(a=(n<3?s(a):n>3?s(t,r,a):s(t,r))||a);return n>3&&a&&Object.defineProperty(t,r,a),a};class g extends o.BaseCommand{constructor(){super(...arguments),this.all=!1,this.json=!1}async execute(){const{cache:e,configuration:t,project:r,workspace:o}=await this.loadProject(),s=new l(r,o,e),n=this.getWorkspaces(r,o),i=this.getDependencies(n),c=await this.getOutdatedDependencies(s,i);this.json?this.context.stdout.write(JSON.stringify(c)+a.EOL):i.length?(console.log(i),new m(this.context,t,c,{workspace:this.all}).print()):this.context.stdout.write("âœ¨ All your dependencies are up to date!"+a.EOL)}async loadProject(){const e=await s.Configuration.find(this.context.cwd,this.context.plugins),[t,{project:r,workspace:n}]=await Promise.all([s.Cache.find(e),s.Project.find(e,this.context.cwd)]);if(!n)throw new o.WorkspaceRequiredError(r.cwd,this.context.cwd);return{cache:t,configuration:e,project:r,workspace:n}}getWorkspaces(e,t){return this.all?e.workspaces:[t]}getDependencies(e){const t=[],r=["dependencies","devDependencies"];for(const o of e)for(const e of r)for(const r of o.manifest[e].values())i.coerce(r.range)&&t.push({dependencyType:e,descriptor:r,workspace:o});return t}async getOutdatedDependencies(e,t){const r=t.map(async({dependencyType:t,descriptor:r,workspace:o})=>{const n=await e.fetch(r,"latest"),a=p(r.range);if(a!==n)return{current:a,latest:n,name:s.structUtils.stringifyIdent(r),type:t,workspace:this.all?this.getWorkspaceName(o):void 0}});return(await Promise.all(r)).filter(d).sort((e,t)=>e.name.localeCompare(t.name))}getWorkspaceName(e){return e.manifest.name?s.structUtils.stringifyIdent(e.manifest.name):e.computeCandidateName()}}g.usage=n.Command.Usage({description:"view outdated dependencies",details:"This command finds outdated dependencies in a project and prints the result in a table or JSON format.",examples:[["View outdated dependencies","yarn outdated"]]}),f([n.Command.Boolean("-a,--all",{description:"Include outdated dependencies from all workspaces"})],g.prototype,"all",void 0),f([n.Command.Boolean("--json",{description:"Format the output as JSON"})],g.prototype,"json",void 0),f([n.Command.Path("outdated")],g.prototype,"execute",null);const y={commands:[g]}}},t={};function r(o){if(t[o])return t[o].exports;var s=t[o]={exports:{}};return e[o](s,s.exports,r),s.exports}return r.d=(e,t)=>{for(var o in t)r.o(t,o)&&!r.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r(399)})();
return plugin;
}
};